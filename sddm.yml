- name: "SDDM"
  block:
  - name: "ðŸ”‘ installing an sddm"
    community.general.pacman:
      name:
        - "{{ pkg1 }}"
        - "{{ pkg2 }}"
        - "{{ pkg3 }}"
        - "{{ pkg4 }}"
      state: present
    become: true
    become_user: "root"
    become_method: "sudo"

  - name: "ðŸ”‘ enable systemd sddm"
    ansible.builtin.systemd_service:
      name: sddm.service
      state: started
      enabled: true
    become: true
    become_user: "{{ ansible_user }}"

  - name: "ðŸ”‘ creating dir sddm.conf.d"
    ansible.builtin.file:
      path: "/etc/sddm.conf.d"
      state: directory
    become: yes
    become_user: root
    become_method: sudo

  - name: "ðŸ”‘ creating dir wayland-sessions"
    ansible.builtin.file:
      path: "/usr/share/wayland-sessions"
      state: directory
    become: yes
    become_user: root
    become_method: sudo

  - name: "ðŸ”‘ check if dir exists for sddm theme"
    stat: path=/usr/share/sddm/themes/dot.sddm
    register: theme_dir

  - name: "ðŸ”‘ copying a dotfiles"
    shell:
      chdir: "{{ ansible_dotfiles }}/sddm"
      cmd: "stow -t /usr/share/sddm/themes theme"
    when: not theme_dir.stat.exists

  - name: "ðŸ”‘ check if dir exists for wayland session"
    stat: path=/usr/share/wayland-sessions/hyprland.desktop
    register: wayland_sesion_dir

  - name: "ðŸ”‘ copying a dotfiles wayland-session"
    shell:
      chdir: "{{ ansible_dotfiles }}/sddm"
      cmd: "stow -t /usr/share/wayland-sessions wayland-sessions"
    when: not wayland_sesion_dir.stat.exists

  - name: "ðŸ”‘ check if dir exists for sddm conf.d"
    stat: path=/etc/sddm.conf.d/theme.conf.user
    register: sddm_conf_dir

  - name: "ðŸ”‘ copying a dotfiles sddm.conf.d"
    shell:
      chdir: "{{ ansible_dotfiles }}/sddm"
      cmd: "stow -t /etc/sddm.conf.d sddm.conf.d"
    when: not sddm_conf_dir.stat.exists

  vars:
    pkg1: "sddm"
    pkg2: "qt6-5compat"
    pkg3: "qt6-declarative"
    pkg4: "qt6-svg" 
